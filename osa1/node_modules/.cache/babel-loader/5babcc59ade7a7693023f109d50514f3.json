{"ast":null,"code":"import _defineProperty from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/perttira/Dropbox/Sites/fullstack/osa1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n/*\n\nconst App = (props) => {\n  const {counter} = props\n  return (\n    <div>{counter.value}</div>\n  )\n}\n\nconst counter = {\n  value: 1\n}\n\nconst renderoi = () => {\n  ReactDOM.render(\n    <App counter={counter} />,\n    document.getElementById('root')\n  )\n}\n\nsetInterval(() => {\n  renderoi()\n  counter.value += 1;\n}, 1000)\n\n*/\n\n/*\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n\n//  React-komponenttien tilaa, eli muuttujaa this.state ei saa päivittää suoraan,\n//  tilan päivitys on tehtävä aina funktion setState avulla.\n//  Metodin kutsuminen päivittää tilan ja aiheuttaa komponentin uuden \n//  renderöinnin (ellei sitä ole estetty myöhemmin esiteltävällä tavalla). \n//  Uudelleenrenderöinnin yhteydessä myös kaikki komponentin sisältämät \n//  alikomponentit renderöidään.\n\n    setInterval(() => {\n      this.setState({ counter: this.state.counter + 1 })\n    }, 1000)\n  }\n  render() {\n    console.log('renderöidään', this.state.counter)\n    return (\n      <div>{this.state.counter}</div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/* TAPAHTUMANKÄSITTELIJÄ \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div>\n        <button onClick={() => this.setState({ counter: this.state.counter + 1 })}>\n          plus\n        </button>\n        <button onClick={() => this.setState({ counter: 0 })}>\n          zero\n        </button>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*   METODIEN KÄYTTÖ JA THIS    \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n    this.kasvataYhdella = this.kasvataYhdella.bind(this)\n    this.nollaa = this.nollaa.bind(this)\n  }\n\n  kasvataYhdella() {\n    this.setState({ counter: this.state.counter + 1 })\n  }\n\n  nollaa() {\n    this.setState({ counter: 0 })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div>\n        <div>\n        <button onClick={this.kasvataYhdella}>\n          plus\n        </button>\n        <button onClick={this.nollaa}>\n          zero\n        </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n*/\n\n/*   TILAN VIEMINEN ALIKOMPONENTTIIN   \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n  }\n\n  asetaArvoon = (arvo) => {\n    return () => {\n      this.setState({ counter: arvo })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Display counter={this.state.counter}/>\n        <div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.counter + 1)}\n            text=\"Plus\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.counter - 1)}\n            text=\"Minus\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(0)}\n            text=\"Zero\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\n// Voidaan lyhentää muotoon: const Display = ({ counter }) => <div>{counter}</div>\nconst Display = (props) => {\n  return (\n    <div>{props.counter}</div>\n  )\n}\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*  MONIMUTKAISEMMAN TILAN PÄIVITTÄMINEN   \n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      vasen: 0,\n      oikea: 0\n    }\n  }\n\n  klikVasen = () => {\n    this.setState({\n      vasen: this.state.vasen + 1\n    })\n  }\n\n  klikOikea = () => {\n    this.setState({\n      oikea: this.state.oikea + 1\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {this.state.vasen}\n          <button onClick={this.klikVasen}>vasen</button>\n          <button onClick={this.klikOikea}>oikea</button>\n          {this.state.oikea}\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n  MONIMUTKAISEMMAN TILAN PÄIVITTÄMINEN */\n\n/*      1.6 unicafe osa1    \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={() => this.setState({ hyvä: this.state.hyvä + 1 })}>\n          Hyvä\n        </button>\n        <button onClick={() => this.setState({ neutraali: this.state.neutraali + 1 })}>\n          Neutraali\n        </button>\n        <button onClick={() => this.setState({ huono: this.state.huono + 1 })}>\n          Huono\n        </button>\n        <div><h1>Statistiikka</h1></div>\n        <div>Hyvä {this.state.hyvä}</div>\n        <div>Neutraali {this.state.neutraali}</div>\n        <div>Huono {this.state.huono}</div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*    1.7 UNICAFE OSA2   \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0,\n    }\n  }\n\n  render() {\n\n    let positiivisia=0;\n    let keskiarvo =0;\n    \n    //console.log(isNaN (((this.state.hyvä)/this.state.yhteensä)*100))\n\n    if (isNaN (((this.state.hyvä)/this.state.yhteensä)*100)) {\n      positiivisia = <div>Positiivisia 0%</div> ;\n    } else {\n      positiivisia = <div>Positiivisia {((this.state.hyvä)/this.state.yhteensä)*100}%</div> ;\n    }\n\n    if (isNaN ((((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100))) {\n      keskiarvo = <div>Keskiarvo 0</div> ;\n    } else {\n      keskiarvo = <div>keskiarvo {(((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100)}</div> ;\n    }\n\n    //console.log(-Math.abs(this.state.huono))\n\n    return (\n      <div>\n        <button onClick={() => this.setState({ hyvä: this.state.hyvä + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Hyvä\n        </button>\n        <button onClick={() => this.setState({ neutraali: this.state.neutraali + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Neutraali\n        </button>\n        <button onClick={() => this.setState({ huono: this.state.huono + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Huono\n        </button>\n        <div><h1>Statistiikka</h1></div>\n        <div>Hyvä {this.state.hyvä}</div>\n        <div>Neutraali {this.state.neutraali}</div>\n        <div>Huono {this.state.huono}</div>\n        <div>{keskiarvo}</div>\n        <div>{positiivisia}</div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*     1.8 UNICAFE OSA 3       */\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.asetaArvoon = function (arvo, arviointi) {\n      return function () {\n        var _this$setState;\n\n        return _this.setState((_this$setState = {}, _defineProperty(_this$setState, arviointi, arvo), _defineProperty(_this$setState, \"yhteens\\xE4\", _this.state.yhteensä + 1), _this$setState));\n      };\n    };\n\n    _this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"laskeKeskiarvo\",\n    value: function laskeKeskiarvo() {\n      console.log(\"laskeKeskiarvo metodissa\");\n      var keskiarvo = (this.state.hyvä + -Math.abs(this.state.huono)) / this.state.yhteensä * 100; //console.log(\"keskiarvon lukuja\", this.state.hyvä,this.state.neutraali, this.state.huono, this.state.yhteensä, keskiarvo )\n\n      return keskiarvo;\n    } //asetaArvoon = (arvo) => () => this.setState({ arvo: arvo+1 })\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Button, {\n        handleClick: this.asetaArvoon(this.state.hyvä + 1, \"hyvä\"),\n        text: \"Hyv\\xE4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }), React.createElement(Button, {\n        handleClick: this.asetaArvoon(this.state.neutraali + 1, \"neutraali\"),\n        text: \"Neutraali\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }), React.createElement(Button, {\n        handleClick: this.asetaArvoon(this.state.huono + 1, \"huono\"),\n        text: \"Huono\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, \"Statistiikka\")), React.createElement(Statistics, {\n        keskiarvo: this.laskeKeskiarvo(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \"Hyv\\xE4 \", this.state.hyvä), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"Neutraali \", this.state.neutraali), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, \"Huono \", this.state.huono), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, keskiarvo), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, positiivisia));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar Button = function Button(_ref) {\n  var handleClick = _ref.handleClick,\n      text = _ref.text;\n  return React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, console.log(handleClick), text);\n};\n\nvar Statistics = function Statistics(_ref2) {\n  var counter = _ref2.counter;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  }, \"counter \", console.log(\"counter\", counter));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 419\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/perttira/Dropbox/Sites/fullstack/osa1/src/index.js"],"names":["React","ReactDOM","App","asetaArvoon","arvo","arviointi","setState","state","yhteensä","hyvä","neutraali","huono","console","log","keskiarvo","Math","abs","laskeKeskiarvo","positiivisia","Component","Button","handleClick","text","Statistics","counter","render","document","getElementById"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/*\n\nconst App = (props) => {\n  const {counter} = props\n  return (\n    <div>{counter.value}</div>\n  )\n}\n\nconst counter = {\n  value: 1\n}\n\nconst renderoi = () => {\n  ReactDOM.render(\n    <App counter={counter} />,\n    document.getElementById('root')\n  )\n}\n\nsetInterval(() => {\n  renderoi()\n  counter.value += 1;\n}, 1000)\n\n*/\n\n\n/*\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n\n//  React-komponenttien tilaa, eli muuttujaa this.state ei saa päivittää suoraan,\n//  tilan päivitys on tehtävä aina funktion setState avulla.\n//  Metodin kutsuminen päivittää tilan ja aiheuttaa komponentin uuden \n//  renderöinnin (ellei sitä ole estetty myöhemmin esiteltävällä tavalla). \n//  Uudelleenrenderöinnin yhteydessä myös kaikki komponentin sisältämät \n//  alikomponentit renderöidään.\n\n    setInterval(() => {\n      this.setState({ counter: this.state.counter + 1 })\n    }, 1000)\n  }\n  render() {\n    console.log('renderöidään', this.state.counter)\n    return (\n      <div>{this.state.counter}</div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/* TAPAHTUMANKÄSITTELIJÄ \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div>\n        <button onClick={() => this.setState({ counter: this.state.counter + 1 })}>\n          plus\n        </button>\n        <button onClick={() => this.setState({ counter: 0 })}>\n          zero\n        </button>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*   METODIEN KÄYTTÖ JA THIS    \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n    this.kasvataYhdella = this.kasvataYhdella.bind(this)\n    this.nollaa = this.nollaa.bind(this)\n  }\n\n  kasvataYhdella() {\n    this.setState({ counter: this.state.counter + 1 })\n  }\n\n  nollaa() {\n    this.setState({ counter: 0 })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div>\n        <div>\n        <button onClick={this.kasvataYhdella}>\n          plus\n        </button>\n        <button onClick={this.nollaa}>\n          zero\n        </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n*/\n\n\n/*   TILAN VIEMINEN ALIKOMPONENTTIIN   \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n  }\n\n  asetaArvoon = (arvo) => {\n    return () => {\n      this.setState({ counter: arvo })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Display counter={this.state.counter}/>\n        <div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.counter + 1)}\n            text=\"Plus\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.counter - 1)}\n            text=\"Minus\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(0)}\n            text=\"Zero\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\n// Voidaan lyhentää muotoon: const Display = ({ counter }) => <div>{counter}</div>\nconst Display = (props) => {\n  return (\n    <div>{props.counter}</div>\n  )\n}\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*  MONIMUTKAISEMMAN TILAN PÄIVITTÄMINEN   \n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      vasen: 0,\n      oikea: 0\n    }\n  }\n\n  klikVasen = () => {\n    this.setState({\n      vasen: this.state.vasen + 1\n    })\n  }\n\n  klikOikea = () => {\n    this.setState({\n      oikea: this.state.oikea + 1\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {this.state.vasen}\n          <button onClick={this.klikVasen}>vasen</button>\n          <button onClick={this.klikOikea}>oikea</button>\n          {this.state.oikea}\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n  MONIMUTKAISEMMAN TILAN PÄIVITTÄMINEN */\n\n/*      1.6 unicafe osa1    \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={() => this.setState({ hyvä: this.state.hyvä + 1 })}>\n          Hyvä\n        </button>\n        <button onClick={() => this.setState({ neutraali: this.state.neutraali + 1 })}>\n          Neutraali\n        </button>\n        <button onClick={() => this.setState({ huono: this.state.huono + 1 })}>\n          Huono\n        </button>\n        <div><h1>Statistiikka</h1></div>\n        <div>Hyvä {this.state.hyvä}</div>\n        <div>Neutraali {this.state.neutraali}</div>\n        <div>Huono {this.state.huono}</div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*    1.7 UNICAFE OSA2   \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0,\n    }\n  }\n\n  render() {\n\n    let positiivisia=0;\n    let keskiarvo =0;\n    \n    //console.log(isNaN (((this.state.hyvä)/this.state.yhteensä)*100))\n\n    if (isNaN (((this.state.hyvä)/this.state.yhteensä)*100)) {\n      positiivisia = <div>Positiivisia 0%</div> ;\n    } else {\n      positiivisia = <div>Positiivisia {((this.state.hyvä)/this.state.yhteensä)*100}%</div> ;\n    }\n\n    if (isNaN ((((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100))) {\n      keskiarvo = <div>Keskiarvo 0</div> ;\n    } else {\n      keskiarvo = <div>keskiarvo {(((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100)}</div> ;\n    }\n\n    //console.log(-Math.abs(this.state.huono))\n\n    return (\n      <div>\n        <button onClick={() => this.setState({ hyvä: this.state.hyvä + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Hyvä\n        </button>\n        <button onClick={() => this.setState({ neutraali: this.state.neutraali + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Neutraali\n        </button>\n        <button onClick={() => this.setState({ huono: this.state.huono + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Huono\n        </button>\n        <div><h1>Statistiikka</h1></div>\n        <div>Hyvä {this.state.hyvä}</div>\n        <div>Neutraali {this.state.neutraali}</div>\n        <div>Huono {this.state.huono}</div>\n        <div>{keskiarvo}</div>\n        <div>{positiivisia}</div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*     1.8 UNICAFE OSA 3       */\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0,\n    }\n  }\n\n  laskeKeskiarvo() {\n    console.log(\"laskeKeskiarvo metodissa\")\n    let keskiarvo = (((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100)\n    //console.log(\"keskiarvon lukuja\", this.state.hyvä,this.state.neutraali, this.state.huono, this.state.yhteensä, keskiarvo )\n    return keskiarvo\n  }\n\n  //asetaArvoon = (arvo) => () => this.setState({ arvo: arvo+1 })\n  asetaArvoon = (arvo,arviointi) => () => this.setState({[arviointi]: arvo, yhteensä: this.state.yhteensä+1})\n\n  render() {\n    \n    return (\n      <div>\n        <Button\n          handleClick={this.asetaArvoon(this.state.hyvä + 1, \"hyvä\")}\n          text=\"Hyvä\"\n        />\n        <Button\n          handleClick={this.asetaArvoon(this.state.neutraali + 1, \"neutraali\")}\n          text=\"Neutraali\"\n        />\n        <Button\n          handleClick={this.asetaArvoon(this.state.huono + 1, \"huono\")}\n          text=\"Huono\"\n        />\n        <div><h1>Statistiikka</h1></div>\n        <Statistics keskiarvo={this.laskeKeskiarvo()}/>\n        <div>Hyvä {this.state.hyvä}</div>\n        <div>Neutraali {this.state.neutraali}</div>\n        <div>Huono {this.state.huono}</div>\n        <div>{keskiarvo}</div>\n        <div>{positiivisia}</div>\n      </div>\n    )\n  }\n}\n\n\nconst Button = ({ handleClick, text}) => (\n  <button onClick={handleClick}>\n  {console.log(handleClick)}\n    {text}\n  </button>\n)\n\nconst Statistics = ({ counter }) => {\n\n  return (\n\n    <div>counter {console.log(\"counter\", counter)}</div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}