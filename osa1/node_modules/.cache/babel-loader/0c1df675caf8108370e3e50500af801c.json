{"ast":null,"code":"import _classCallCheck from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/perttira/Dropbox/Sites/fullstack/osa1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n/*\n\nconst App = (props) => {\n  const {counter} = props\n  return (\n    <div>{counter.value}</div>\n  )\n}\n\nconst counter = {\n  value: 1\n}\n\nconst renderoi = () => {\n  ReactDOM.render(\n    <App counter={counter} />,\n    document.getElementById('root')\n  )\n}\n\nsetInterval(() => {\n  renderoi()\n  counter.value += 1;\n}, 1000)\n\n*/\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      counter: 1\n      /*\n       React-komponenttien tilaa, eli muuttujaa this.state ei saa päivittää suoraan,\n        tilan päivitys on tehtävä aina funktion setState avulla.\n         Metodin kutsuminen päivittää tilan ja aiheuttaa komponentin uuden \n         renderöinnin (ellei sitä ole estetty myöhemmin esiteltävällä tavalla). \n         Uudelleenrenderöinnin yhteydessä myös kaikki komponentin sisältämät \n         alikomponentit renderöidään.\n      */\n\n    };\n    setInterval(function () {\n      _this.setState({\n        counter: _this.state.counter + 1\n      });\n    }, 1000);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log('renderöidään', this.state.counter);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.counter);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/perttira/Dropbox/Sites/fullstack/osa1/src/index.js"],"names":["React","ReactDOM","App","state","counter","setInterval","setState","console","log","Component","render","document","getElementById"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2BMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AAEf;;;;;;;;;AAHiB,KAAb;AAWAC,IAAAA,WAAW,CAAC,YAAM;AAChB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE,MAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAhC,OAAd;AACD,KAFU,EAER,IAFQ,CAAX;AAbY;AAgBb;;;;6BACQ;AACPG,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKL,KAAL,CAAWC,OAAvC;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKD,KAAL,CAAWC,OAAjB,CADF;AAGD;;;;EAvBeJ,KAAK,CAACS,S;;AA0BxBR,QAAQ,CAACS,MAAT,CACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/*\n\nconst App = (props) => {\n  const {counter} = props\n  return (\n    <div>{counter.value}</div>\n  )\n}\n\nconst counter = {\n  value: 1\n}\n\nconst renderoi = () => {\n  ReactDOM.render(\n    <App counter={counter} />,\n    document.getElementById('root')\n  )\n}\n\nsetInterval(() => {\n  renderoi()\n  counter.value += 1;\n}, 1000)\n\n*/\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n/*\n React-komponenttien tilaa, eli muuttujaa this.state ei saa päivittää suoraan,\n  tilan päivitys on tehtävä aina funktion setState avulla.\n   Metodin kutsuminen päivittää tilan ja aiheuttaa komponentin uuden \n   renderöinnin (ellei sitä ole estetty myöhemmin esiteltävällä tavalla). \n   Uudelleenrenderöinnin yhteydessä myös kaikki komponentin sisältämät \n   alikomponentit renderöidään.\n*/\n    setInterval(() => {\n      this.setState({ counter: this.state.counter + 1 })\n    }, 1000)\n  }\n  render() {\n    console.log('renderöidään', this.state.counter)\n    return (\n      <div>{this.state.counter}</div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}