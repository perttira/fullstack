{"ast":null,"code":"import _classCallCheck from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/perttira/Dropbox/Sites/fullstack/osa1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n/*\n\nconst App = (props) => {\n  const {counter} = props\n  return (\n    <div>{counter.value}</div>\n  )\n}\n\nconst counter = {\n  value: 1\n}\n\nconst renderoi = () => {\n  ReactDOM.render(\n    <App counter={counter} />,\n    document.getElementById('root')\n  )\n}\n\nsetInterval(() => {\n  renderoi()\n  counter.value += 1;\n}, 1000)\n\n*/\n\n/*\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n\n//  React-komponenttien tilaa, eli muuttujaa this.state ei saa päivittää suoraan,\n//  tilan päivitys on tehtävä aina funktion setState avulla.\n//  Metodin kutsuminen päivittää tilan ja aiheuttaa komponentin uuden \n//  renderöinnin (ellei sitä ole estetty myöhemmin esiteltävällä tavalla). \n//  Uudelleenrenderöinnin yhteydessä myös kaikki komponentin sisältämät \n//  alikomponentit renderöidään.\n\n    setInterval(() => {\n      this.setState({ counter: this.state.counter + 1 })\n    }, 1000)\n  }\n  render() {\n    console.log('renderöidään', this.state.counter)\n    return (\n      <div>{this.state.counter}</div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/* TAPAHTUMANKÄSITTELIJÄ \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div>\n        <button onClick={() => this.setState({ counter: this.state.counter + 1 })}>\n          plus\n        </button>\n        <button onClick={() => this.setState({ counter: 0 })}>\n          zero\n        </button>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*   METODIEN KÄYTTÖ JA THIS    \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n    this.kasvataYhdella = this.kasvataYhdella.bind(this)\n    this.nollaa = this.nollaa.bind(this)\n  }\n\n  kasvataYhdella() {\n    this.setState({ counter: this.state.counter + 1 })\n  }\n\n  nollaa() {\n    this.setState({ counter: 0 })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div>\n        <div>\n        <button onClick={this.kasvataYhdella}>\n          plus\n        </button>\n        <button onClick={this.nollaa}>\n          zero\n        </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n*/\n\n/*   TILAN VIEMINEN ALIKOMPONENTTIIN   \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n  }\n\n  asetaArvoon = (arvo) => {\n    return () => {\n      this.setState({ counter: arvo })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Display counter={this.state.counter}/>\n        <div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.counter + 1)}\n            text=\"Plus\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.counter - 1)}\n            text=\"Minus\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(0)}\n            text=\"Zero\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\n// Voidaan lyhentää muotoon: const Display = ({ counter }) => <div>{counter}</div>\nconst Display = (props) => {\n  return (\n    <div>{props.counter}</div>\n  )\n}\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*  MONIMUTKAISEMMAN TILAN PÄIVITTÄMINEN   \n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      vasen: 0,\n      oikea: 0\n    }\n  }\n\n  klikVasen = () => {\n    this.setState({\n      vasen: this.state.vasen + 1\n    })\n  }\n\n  klikOikea = () => {\n    this.setState({\n      oikea: this.state.oikea + 1\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {this.state.vasen}\n          <button onClick={this.klikVasen}>vasen</button>\n          <button onClick={this.klikOikea}>oikea</button>\n          {this.state.oikea}\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n  MONIMUTKAISEMMAN TILAN PÄIVITTÄMINEN */\n\n/*      1.6 unicafe osa1    \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={() => this.setState({ hyvä: this.state.hyvä + 1 })}>\n          Hyvä\n        </button>\n        <button onClick={() => this.setState({ neutraali: this.state.neutraali + 1 })}>\n          Neutraali\n        </button>\n        <button onClick={() => this.setState({ huono: this.state.huono + 1 })}>\n          Huono\n        </button>\n        <div><h1>Statistiikka</h1></div>\n        <div>Hyvä {this.state.hyvä}</div>\n        <div>Neutraali {this.state.neutraali}</div>\n        <div>Huono {this.state.huono}</div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*    1.7 UNICAFE OSA2   \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0,\n    }\n  }\n\n  render() {\n\n    let positiivisia=0;\n    let keskiarvo =0;\n    \n    //console.log(isNaN (((this.state.hyvä)/this.state.yhteensä)*100))\n\n    if (isNaN (((this.state.hyvä)/this.state.yhteensä)*100)) {\n      positiivisia = <div>Positiivisia 0%</div> ;\n    } else {\n      positiivisia = <div>Positiivisia {((this.state.hyvä)/this.state.yhteensä)*100}%</div> ;\n    }\n\n    if (isNaN ((((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100))) {\n      keskiarvo = <div>Keskiarvo 0</div> ;\n    } else {\n      keskiarvo = <div>keskiarvo {(((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100)}</div> ;\n    }\n\n    return (\n      <div>\n        <div><h1>Anna palautetta</h1></div>\n        <button onClick={() => this.setState({ hyvä: this.state.hyvä + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Hyvä\n        </button>\n        <button onClick={() => this.setState({ neutraali: this.state.neutraali + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Neutraali\n        </button>\n        <button onClick={() => this.setState({ huono: this.state.huono + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Huono\n        </button>\n        <div><h1>Statistiikka</h1></div>\n        <div>Hyvä {this.state.hyvä}</div>\n        <div>Neutraali {this.state.neutraali}</div>\n        <div>Huono {this.state.huono}</div>\n        <div>{keskiarvo}</div>\n        <div>{positiivisia}</div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*     1.8 UNICAFE OSA 3       \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0,\n    }\n  }\n\n  onkoNan(luku) {\n    let palautettava\n    if (isNaN(luku)) {\n      palautettava = 0\n    } else {\n      palautettava = luku\n    }\n    return palautettava\n  }\n\n  laskeKeskiarvo() {\n    let keskiarvo = (((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100)\n    return this.onkoNan(keskiarvo)\n  }\n\n  laskePositiiviset() {\n    let positiiviset = (((this.state.hyvä)/this.state.yhteensä)*100)\n    return this.onkoNan(positiiviset)\n  }\n\n  asetaArvoon = (arvo,arviointi) => () => this.setState({[arviointi]: arvo, yhteensä: this.state.yhteensä+1})\n\n  render() {\n    \n    return (\n      <div>\n        <div><h1>Anna palautetta</h1></div>\n        <Button\n          handleClick={this.asetaArvoon(this.state.hyvä + 1, \"hyvä\")}\n          text=\"Hyvä\"\n        />\n        <Button\n          handleClick={this.asetaArvoon(this.state.neutraali + 1, \"neutraali\")}\n          text=\"Neutraali\"\n        />\n        <Button\n          handleClick={this.asetaArvoon(this.state.huono + 1, \"huono\")}\n          text=\"Huono\"\n        />\n        <div><h1>Statistiikka</h1></div>\n          <Statistics hyviä={this.state.hyvä} neutraaleja={this.state.neutraali} huonoja={this.state.huono} positiiviset = {this.laskePositiiviset()}/>\n          <Statistic keskiarvo={this.laskeKeskiarvo()}/>\n        </div>\n    )\n  }\n}\n\n\nconst Button = ({ handleClick, text}) => (\n  <button onClick={handleClick}>\n  {console.log(handleClick)}\n    {text}\n  </button>\n)\n\nconst Statistic = ({ keskiarvo }) => {\n  return (\n    <div>Keskiarvo {keskiarvo}</div>\n  )\n}\n\nconst Statistics = ({ hyviä, neutraaleja, huonoja, positiiviset }) => {\n  return (\n    <div>\n      <div>Hyviä {hyviä}</div>\n      <div>Neutraaleja {neutraaleja}</div>\n      <div>Huonoja {huonoja}</div>\n      <div>Positiivisia {positiiviset}%</div>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*      UNICAFE 1.9 OSA 4 JA 1.10 OSA 5     \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0,\n    }\n  }\n\n  onkoPalautteita() {\n    let palautteita = false\n    if(this.state.yhteensä!=0){\n      palautteita = true\n    }\n    return palautteita\n  }\n\n  onkoNan(luku) {\n    let palautettava\n    if (isNaN(luku)) {\n      palautettava = 0\n    } else {\n      palautettava = luku\n    }\n    return palautettava\n  }\n\n  laskeKeskiarvo() {\n    let keskiarvo = (((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100)\n    return this.onkoNan(keskiarvo)\n  }\n\n  laskePositiiviset() {\n    let positiiviset = (((this.state.hyvä)/this.state.yhteensä)*100)\n    return this.onkoNan(positiiviset)\n  }\n\n  asetaArvoon = (arvo,arviointi) => () => this.setState({[arviointi]: arvo, yhteensä: this.state.yhteensä+1})\n\n  render() {\n    let arvo = 1\n    if(this.onkoPalautteita()){\n      return(\n        <div>\n          <div><h1>Anna palautetta</h1></div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.hyvä + 1, \"hyvä\")}\n            text=\"Hyvä\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.neutraali + 1, \"neutraali\")}\n            text=\"Neutraali\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.huono + 1, \"huono\")}\n            text=\"Huono\"\n          />\n        \n          <div><h1>Statistiikka</h1></div>\n            <Statistics hyviä={this.state.hyvä} neutraaleja={this.state.neutraali} huonoja={this.state.huono} positiiviset = {this.laskePositiiviset()}/>\n            <Statistic keskiarvo={this.laskeKeskiarvo()}/>\n          </div>\n      ) \n    }else{\n      return (\n        <div>\n          <div><h1>Anna palautetta</h1></div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.hyvä + 1, \"hyvä\")}\n            text=\"Hyvä\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.neutraali + 1, \"neutraali\")}\n            text=\"Neutraali\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.huono + 1, \"huono\")}\n            text=\"Huono\"\n          />\n        \n          <div><h1>Statistiikka</h1></div>\n            <p>ei yhtään palautetta annettu</p>\n          </div>\n      )\n    } //else\n  }\n}\n\n\nconst Button = ({ handleClick, text}) => (\n  <button onClick={handleClick}>\n  {console.log(handleClick)}\n    {text}\n  </button>\n)\n\nconst Statistic = ({ keskiarvo }) => {\n  return (\n    <div>Keskiarvo {keskiarvo}</div>\n  )\n}\n\nconst Statistics = ({ hyviä, neutraaleja, huonoja, positiiviset }) => {\n  return (\n    <div>\n      <div>Hyviä {hyviä}</div>\n      <div>Neutraaleja {neutraaleja}</div>\n      <div>Huonoja {huonoja}</div>\n      <div>Positiivisia {positiiviset}%</div>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*      1.11 UNICAFE OSA 6     \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0,\n    }\n  }\n\n  onkoPalautteita() {\n    let palautteita = false\n    if(this.state.yhteensä!=0){\n      palautteita = true\n    }\n    return palautteita\n  }\n\n  onkoNan(luku) {\n    let palautettava\n    if (isNaN(luku)) {\n      palautettava = 0\n    } else {\n      palautettava = luku\n    }\n    return palautettava\n  }\n\n  laskeKeskiarvo() {\n    let keskiarvo = (((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100)\n    return this.onkoNan(keskiarvo)\n  }\n\n  laskePositiiviset() {\n    let positiiviset = (((this.state.hyvä)/this.state.yhteensä)*100)\n    return this.onkoNan(positiiviset)\n  }\n\n  asetaArvoon = (arvo,arviointi) => () => this.setState({[arviointi]: arvo, yhteensä: this.state.yhteensä+1})\n\n  render() {\n    let arvo = 1\n    if(this.onkoPalautteita()){\n      return(\n        <div>\n          <div><h1>Anna palautetta</h1></div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.hyvä + 1, \"hyvä\")}\n            text=\"Hyvä\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.neutraali + 1, \"neutraali\")}\n            text=\"Neutraali\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.huono + 1, \"huono\")}\n            text=\"Huono\"\n          />\n        \n          <div><h1>Statistiikka</h1></div>\n            <Statistics hyviä={this.state.hyvä} neutraaleja={this.state.neutraali} huonoja={this.state.huono} positiiviset = {this.laskePositiiviset()}/>\n            <Statistic keskiarvo={this.laskeKeskiarvo()}/>\n          </div>\n      ) \n    }else{\n      return (\n        <div>\n          <div><h1>Anna palautetta</h1></div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.hyvä + 1, \"hyvä\")}\n            text=\"Hyvä\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.neutraali + 1, \"neutraali\")}\n            text=\"Neutraali\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.huono + 1, \"huono\")}\n            text=\"Huono\"\n          />\n        \n          <div><h1>Statistiikka</h1></div>\n            <p>ei yhtään palautetta annettu</p>\n          </div>\n      )\n    } //else\n  }\n}\n\n\nconst Button = ({ handleClick, text}) => (\n  <button onClick={handleClick}>\n  {console.log(handleClick)}\n    {text}\n  </button>\n)\n\nconst Statistic = ({ keskiarvo }) => {\n  return (\n    <div>\n      <table>\n        <tr>\n          <td>Keskiarvo {keskiarvo}</td>\n        </tr>\n      </table>\n    </div>\n  )\n}\n\nconst Statistics = ({ hyviä, neutraaleja, huonoja, positiiviset }) => {\n  return (\n    <div>\n      <table>\n        <tr>\n          <td>Hyviä {hyviä}</td>\n        </tr>\n        <tr>\n          <td>Neutraaleja {neutraaleja}</td>\n        </tr>\n        <tr>\n          <td>Huonoja {huonoja}</td>\n        </tr>\n        <tr>\n          <td>Positiivisia {positiiviset}%</td>\n        </tr>\n      </table>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*       1.12 ANEKDOOTIT OSA 1 & 1.13 ANEKDOOTIT OSA 2\n\n   */\n\n/*\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n       selected: 0,\n       suurinPisteIndex: 0,\n       suurimmatPisteet: 0,\n       pisteet3: 0,\n       pisteet4: 0,\n       pisteet5: 0,\n       satunnaisluku: 0,\n       random: []\n      }\n  }\n\n  arvoSatunnaisluku = () => () => this.setState({satunnaisluku: Math.floor((Math.random() * 6) + 0)})\n\n  addVote = () => () => { \n    //const kopio = [...anecdotes]\n    console.log(\"addVote anecdotes :\", anecdotes)\n    anecdotes[this.state.satunnaisluku].pisteet += 1\n    this.setState({selected: 1})\n    //console.log(\"addVote kopio :\", kopio)\n  }\n\n  winnerVote() {\n    let index = 0\n    let suurinPisteIndex = 0\n    let suurinPiste = 0\n    console.log(\"anekdoottien pituus\", anecdotes.length-1)\n\n    while(index < anecdotes.length-1){\n      console.log(\"anekdoottien pituus wilessä\", anecdotes.length)\n      console.log(\"suurimmatPisteet\", this.state.suurimmatPisteet)\n      console.log(\"anecdotes[index].pisteet\", anecdotes[index].pisteet)\n      console.log(\"this.state.suurimmatPisteet\", this.state.suurimmatPisteet)\n\n\n    if(anecdotes[index].pisteet>this.state.suurimmatPisteet){\n        console.log(\"anecdotes.pisteet\", anecdotes[index].pisteet)\n        this.setState({suurimmatPisteet: anecdotes[index].pisteet})\n        this.setState({suurinPisteIndex: index})\n        console.log(\"suurimmatPisteet\", this.state.suurimmatPisteet)\n        suurinPisteIndex = index\n   }   \n   console.log(\"suurimmatPisteet IFFIN JÄLKEEN\", this.state.suurimmatPisteet)\n   console.log(\"anecdotes[index].pisteet IFFIN JÄLKEEN\", anecdotes[index].pisteet)\n   console.log(\"this.state.suurimmatPisteet IFFIN JÄLKEEN\", this.state.suurimmatPisteet)\n   \n      index++\n      console.log(\"indexi whilessä\", index)\n    }\n    return suurinPisteIndex\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Anekdootti satunnaisluku={this.state.satunnaisluku}/>\n        </div>\n        <span>\n          <VoteButton\n            handleClick={this.addVote()}\n            text=\"vote\" \n          />\n        </span>\n        <span>\n          <Button\n            handleClick={this.arvoSatunnaisluku()}\n            text=\"next anecdote\"\n          />\n        </span>\n        <div>\n          <WinnerVote winnerVote={this.winnerVote()}/>\n\t\t\t  </div>\n      </div>\n    )\n  }\n}\n\n\n\nconst anecdotes = [\n  { id: 1, pisteet: 0, content: 'If it hurts, do it more often'},\n  { id: 2, pisteet: 0, content: 'Adding manpower to a late software project makes it later!'},\n  { id: 3, pisteet: 0, content: 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.'},\n  { id: 4, pisteet: 0, content: 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.'},\n  { id: 5, pisteet: 0, content: 'Premature optimization is the root of all evil.'},\n  { id: 6, pisteet: 0, content: 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'}\n]\n\nconst WinnerVote = ({winnerVote}) => {\n  console.log(\"winnerVote\", winnerVote)\n  console.log()\n  return (\n    <div>\n      <h2>anecdote with most votes:</h2>\n      <p>{anecdotes[winnerVote].content}</p>\n      <p>Has {anecdotes[winnerVote].pisteet} votes</p>\n    </div>\n  )\n}\n\nconst Anekdootti = ({ satunnaisluku }) => {\n  return (\n    <div>\n      <p>{anecdotes[satunnaisluku].content}</p>\n      <p>Has {anecdotes[satunnaisluku].pisteet} votes</p>\n    </div>\n  )\n}\n\nconst Button = ({ handleClick, text}) => (\n  <button onClick={handleClick}>\n  {console.log(handleClick)}\n    {text}\n  </button>\n)\n\nconst VoteButton = ({ handleClick, text}) => (\n  <button onClick={handleClick}>\n  {console.log(handleClick)}\n    {text}\n  </button>\n)\n\nReactDOM.render(\n  <App anecdotes={anecdotes} />,\n  document.getElementById('root')\n)\n\n*/\n\n/* let tapaus\n switch(this.state.selected) {\n    case 0:\n       //this.setState({pisteet1: this.state.pisteet1+1})\n       tapaus = \"pisteet1\"\n       break;\n   case 1:\n       //this.setState({pisteet2: this.state.pisteet2+1})\n       tapaus = \"pisteet2\"\n       break;\n   case 2:\n       //this.setState({pisteet3: this.state.pisteet3+1})\n       tapaus = \"pisteet3\"\n       break;\n   case 3:\n       //this.setState({pisteet4: this.state.pisteet4+1})\n       tapaus = \"pisteet4\"\n       break;\n   case 4:\n       //this.setState({pisteet5: this.state.pisteet5+1})\n       tapaus = \"pisteet5\"\n       break;\n}\n this.setState({[tapaus]: this.state.selected})\n*/\n\n/*_renderObject(){\n  let i = this.state.satunnaisluku\n  console.log(\"LUETTU SATUNNAISLUKU:\", typeof(i))\n  console.log(\"SATUNNAISLUKU:\", this.state.satunnaisluku)\n\n  console.log(\"this.props[i]\", this.props.anecdotes[2].pisteet)\n  for(let i = 0; i < this.props.length; i++) {\n    if(this.props[i] === this.state.satunnaisluku){\n    console.log(\"FOR IF SISÄLLÄ\")\n    console.log(\"FOR IF SISÄLLÄ anecdotes[i].name :\", anecdotes[i].name)\n\n    }\n\n    FILTTERI\n\n    var ages = [32, 33, 16, 40];\n\n    function checkAdult(age) {\n      return age >= 18;\n    }\n\n    function myFunction() {\n      document.getElementById(\"demo\").innerHTML = ages.filter(checkAdult);\n    }\n\n    MAP\n\n    let names = anecdotes.map(function(anecdote) {\n      return anecdote.name\n    }\n\n     // SHORT let names = anecdotes.map(function(anecdote) => anecdote.name)\n     // SHORTER let names = anecdotes.map(function(x) => x.name)\n     // REJECT\n     // REDUCE  let orders = [\n     //  { amount: 250 },\n     //  { amount: 400 },\n     //  { amount: 100 },\n     //  { amount: 325 }\n     //  ]\n     //  \n     //  let totalAmoun = orders.reduce(function(sum, order) {\n     //  return sum + order.amount\n     //  } 0)\n    \n    */\n\n/*\n  for (let key in anecdotes) {\n    console.log(\"KULLI\",anecdotes[2].name);\n  }\n\n  return Object.entries(anecdotes).map(([key, value], i) => {\n\n    console.log(Object.entries(anecdotes))\n    return (\n      <div key={key}>\n        pisteet is: {value.pisteet} ;\n        name is: {value.name}\n      </div>\n    )\n  })\n  */\n\nvar list = [{\n  id: 1,\n  pisteet: 0,\n  content: 'If it hurts, do it more often'\n}, {\n  id: 2,\n  pisteet: 0,\n  content: 'Adding manpower to a late software project makes it later!'\n}, {\n  id: 3,\n  pisteet: 0,\n  content: 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.'\n}, {\n  id: 4,\n  pisteet: 0,\n  content: 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.'\n}, {\n  id: 5,\n  pisteet: 0,\n  content: 'Premature optimization is the root of all evil.'\n}, {\n  id: 6,\n  pisteet: 0,\n  content: 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      members: [],\n      enitenPisteitä: 0\n    };\n\n    _this.handleEvent = function (id, pisteet) {\n      var updatePisteet = _this.state.members.map(function (member) {\n        if (member.id === id) {\n          return Object.assign({}, member, {\n            pisteet: member.pisteet + 1\n          });\n        } else {\n          return member;\n        }\n      });\n\n      _this.setState({\n        members: updatePisteet\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        members: list\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986\n        },\n        __self: this\n      }, this.state.members.map(function (list_map) {\n        return React.createElement(Anekdootti, {\n          key: list_map.id,\n          id: list_map.id,\n          pisteet: list_map.pisteet,\n          anekdootti: list_map.content,\n          onVote: _this2.handleEvent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 987\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar Anekdootti =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Anekdootti, _React$Component2);\n\n  function Anekdootti() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, Anekdootti);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(Anekdootti)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _this3.handleClick = function (e) {\n      return _this3.props.onVote(_this3.props.id, _this3.props.pisteet);\n    };\n\n    return _this3;\n  }\n\n  _createClass(Anekdootti, [{\n    key: \"render\",\n    //  handleClick = (e) => console.log('button clicked', e.target);\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002\n        },\n        __self: this\n      }, this.props.anekdootti), React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this4.handleClick(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006\n        },\n        __self: this\n      }, \"Pisteet: \", this.props.pisteet));\n    }\n  }]);\n\n  return Anekdootti;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 1013\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/perttira/Dropbox/Sites/fullstack/osa1/src/index.js"],"names":["React","ReactDOM","list","id","pisteet","content","App","state","members","enitenPisteitä","handleEvent","updatePisteet","map","member","Object","assign","setState","list_map","Component","Anekdootti","handleClick","e","props","onVote","anekdootti","render","document","getElementById"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/*\n\nconst App = (props) => {\n  const {counter} = props\n  return (\n    <div>{counter.value}</div>\n  )\n}\n\nconst counter = {\n  value: 1\n}\n\nconst renderoi = () => {\n  ReactDOM.render(\n    <App counter={counter} />,\n    document.getElementById('root')\n  )\n}\n\nsetInterval(() => {\n  renderoi()\n  counter.value += 1;\n}, 1000)\n\n*/\n\n\n/*\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n\n//  React-komponenttien tilaa, eli muuttujaa this.state ei saa päivittää suoraan,\n//  tilan päivitys on tehtävä aina funktion setState avulla.\n//  Metodin kutsuminen päivittää tilan ja aiheuttaa komponentin uuden \n//  renderöinnin (ellei sitä ole estetty myöhemmin esiteltävällä tavalla). \n//  Uudelleenrenderöinnin yhteydessä myös kaikki komponentin sisältämät \n//  alikomponentit renderöidään.\n\n    setInterval(() => {\n      this.setState({ counter: this.state.counter + 1 })\n    }, 1000)\n  }\n  render() {\n    console.log('renderöidään', this.state.counter)\n    return (\n      <div>{this.state.counter}</div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/* TAPAHTUMANKÄSITTELIJÄ \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div>\n        <button onClick={() => this.setState({ counter: this.state.counter + 1 })}>\n          plus\n        </button>\n        <button onClick={() => this.setState({ counter: 0 })}>\n          zero\n        </button>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*   METODIEN KÄYTTÖ JA THIS    \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n    this.kasvataYhdella = this.kasvataYhdella.bind(this)\n    this.nollaa = this.nollaa.bind(this)\n  }\n\n  kasvataYhdella() {\n    this.setState({ counter: this.state.counter + 1 })\n  }\n\n  nollaa() {\n    this.setState({ counter: 0 })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div>\n        <div>\n        <button onClick={this.kasvataYhdella}>\n          plus\n        </button>\n        <button onClick={this.nollaa}>\n          zero\n        </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n*/\n\n\n/*   TILAN VIEMINEN ALIKOMPONENTTIIN   \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n  }\n\n  asetaArvoon = (arvo) => {\n    return () => {\n      this.setState({ counter: arvo })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Display counter={this.state.counter}/>\n        <div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.counter + 1)}\n            text=\"Plus\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.counter - 1)}\n            text=\"Minus\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(0)}\n            text=\"Zero\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\n// Voidaan lyhentää muotoon: const Display = ({ counter }) => <div>{counter}</div>\nconst Display = (props) => {\n  return (\n    <div>{props.counter}</div>\n  )\n}\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*  MONIMUTKAISEMMAN TILAN PÄIVITTÄMINEN   \n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      vasen: 0,\n      oikea: 0\n    }\n  }\n\n  klikVasen = () => {\n    this.setState({\n      vasen: this.state.vasen + 1\n    })\n  }\n\n  klikOikea = () => {\n    this.setState({\n      oikea: this.state.oikea + 1\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {this.state.vasen}\n          <button onClick={this.klikVasen}>vasen</button>\n          <button onClick={this.klikOikea}>oikea</button>\n          {this.state.oikea}\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n  MONIMUTKAISEMMAN TILAN PÄIVITTÄMINEN */\n\n/*      1.6 unicafe osa1    \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={() => this.setState({ hyvä: this.state.hyvä + 1 })}>\n          Hyvä\n        </button>\n        <button onClick={() => this.setState({ neutraali: this.state.neutraali + 1 })}>\n          Neutraali\n        </button>\n        <button onClick={() => this.setState({ huono: this.state.huono + 1 })}>\n          Huono\n        </button>\n        <div><h1>Statistiikka</h1></div>\n        <div>Hyvä {this.state.hyvä}</div>\n        <div>Neutraali {this.state.neutraali}</div>\n        <div>Huono {this.state.huono}</div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*    1.7 UNICAFE OSA2   \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0,\n    }\n  }\n\n  render() {\n\n    let positiivisia=0;\n    let keskiarvo =0;\n    \n    //console.log(isNaN (((this.state.hyvä)/this.state.yhteensä)*100))\n\n    if (isNaN (((this.state.hyvä)/this.state.yhteensä)*100)) {\n      positiivisia = <div>Positiivisia 0%</div> ;\n    } else {\n      positiivisia = <div>Positiivisia {((this.state.hyvä)/this.state.yhteensä)*100}%</div> ;\n    }\n\n    if (isNaN ((((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100))) {\n      keskiarvo = <div>Keskiarvo 0</div> ;\n    } else {\n      keskiarvo = <div>keskiarvo {(((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100)}</div> ;\n    }\n\n    return (\n      <div>\n        <div><h1>Anna palautetta</h1></div>\n        <button onClick={() => this.setState({ hyvä: this.state.hyvä + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Hyvä\n        </button>\n        <button onClick={() => this.setState({ neutraali: this.state.neutraali + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Neutraali\n        </button>\n        <button onClick={() => this.setState({ huono: this.state.huono + 1, yhteensä: this.state.yhteensä + 1 })}>\n          Huono\n        </button>\n        <div><h1>Statistiikka</h1></div>\n        <div>Hyvä {this.state.hyvä}</div>\n        <div>Neutraali {this.state.neutraali}</div>\n        <div>Huono {this.state.huono}</div>\n        <div>{keskiarvo}</div>\n        <div>{positiivisia}</div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*     1.8 UNICAFE OSA 3       \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0,\n    }\n  }\n\n  onkoNan(luku) {\n    let palautettava\n    if (isNaN(luku)) {\n      palautettava = 0\n    } else {\n      palautettava = luku\n    }\n    return palautettava\n  }\n\n  laskeKeskiarvo() {\n    let keskiarvo = (((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100)\n    return this.onkoNan(keskiarvo)\n  }\n\n  laskePositiiviset() {\n    let positiiviset = (((this.state.hyvä)/this.state.yhteensä)*100)\n    return this.onkoNan(positiiviset)\n  }\n\n  asetaArvoon = (arvo,arviointi) => () => this.setState({[arviointi]: arvo, yhteensä: this.state.yhteensä+1})\n\n  render() {\n    \n    return (\n      <div>\n        <div><h1>Anna palautetta</h1></div>\n        <Button\n          handleClick={this.asetaArvoon(this.state.hyvä + 1, \"hyvä\")}\n          text=\"Hyvä\"\n        />\n        <Button\n          handleClick={this.asetaArvoon(this.state.neutraali + 1, \"neutraali\")}\n          text=\"Neutraali\"\n        />\n        <Button\n          handleClick={this.asetaArvoon(this.state.huono + 1, \"huono\")}\n          text=\"Huono\"\n        />\n        <div><h1>Statistiikka</h1></div>\n          <Statistics hyviä={this.state.hyvä} neutraaleja={this.state.neutraali} huonoja={this.state.huono} positiiviset = {this.laskePositiiviset()}/>\n          <Statistic keskiarvo={this.laskeKeskiarvo()}/>\n        </div>\n    )\n  }\n}\n\n\nconst Button = ({ handleClick, text}) => (\n  <button onClick={handleClick}>\n  {console.log(handleClick)}\n    {text}\n  </button>\n)\n\nconst Statistic = ({ keskiarvo }) => {\n  return (\n    <div>Keskiarvo {keskiarvo}</div>\n  )\n}\n\nconst Statistics = ({ hyviä, neutraaleja, huonoja, positiiviset }) => {\n  return (\n    <div>\n      <div>Hyviä {hyviä}</div>\n      <div>Neutraaleja {neutraaleja}</div>\n      <div>Huonoja {huonoja}</div>\n      <div>Positiivisia {positiiviset}%</div>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*      UNICAFE 1.9 OSA 4 JA 1.10 OSA 5     \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0,\n    }\n  }\n\n  onkoPalautteita() {\n    let palautteita = false\n    if(this.state.yhteensä!=0){\n      palautteita = true\n    }\n    return palautteita\n  }\n\n  onkoNan(luku) {\n    let palautettava\n    if (isNaN(luku)) {\n      palautettava = 0\n    } else {\n      palautettava = luku\n    }\n    return palautettava\n  }\n\n  laskeKeskiarvo() {\n    let keskiarvo = (((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100)\n    return this.onkoNan(keskiarvo)\n  }\n\n  laskePositiiviset() {\n    let positiiviset = (((this.state.hyvä)/this.state.yhteensä)*100)\n    return this.onkoNan(positiiviset)\n  }\n\n  asetaArvoon = (arvo,arviointi) => () => this.setState({[arviointi]: arvo, yhteensä: this.state.yhteensä+1})\n\n  render() {\n    let arvo = 1\n    if(this.onkoPalautteita()){\n      return(\n        <div>\n          <div><h1>Anna palautetta</h1></div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.hyvä + 1, \"hyvä\")}\n            text=\"Hyvä\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.neutraali + 1, \"neutraali\")}\n            text=\"Neutraali\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.huono + 1, \"huono\")}\n            text=\"Huono\"\n          />\n        \n          <div><h1>Statistiikka</h1></div>\n            <Statistics hyviä={this.state.hyvä} neutraaleja={this.state.neutraali} huonoja={this.state.huono} positiiviset = {this.laskePositiiviset()}/>\n            <Statistic keskiarvo={this.laskeKeskiarvo()}/>\n          </div>\n      ) \n    }else{\n      return (\n        <div>\n          <div><h1>Anna palautetta</h1></div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.hyvä + 1, \"hyvä\")}\n            text=\"Hyvä\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.neutraali + 1, \"neutraali\")}\n            text=\"Neutraali\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.huono + 1, \"huono\")}\n            text=\"Huono\"\n          />\n        \n          <div><h1>Statistiikka</h1></div>\n            <p>ei yhtään palautetta annettu</p>\n          </div>\n      )\n    } //else\n  }\n}\n\n\nconst Button = ({ handleClick, text}) => (\n  <button onClick={handleClick}>\n  {console.log(handleClick)}\n    {text}\n  </button>\n)\n\nconst Statistic = ({ keskiarvo }) => {\n  return (\n    <div>Keskiarvo {keskiarvo}</div>\n  )\n}\n\nconst Statistics = ({ hyviä, neutraaleja, huonoja, positiiviset }) => {\n  return (\n    <div>\n      <div>Hyviä {hyviä}</div>\n      <div>Neutraaleja {neutraaleja}</div>\n      <div>Huonoja {huonoja}</div>\n      <div>Positiivisia {positiiviset}%</div>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*      1.11 UNICAFE OSA 6     \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hyvä: 0,\n      neutraali: 0,\n      huono: 0,\n      yhteensä: 0,\n    }\n  }\n\n  onkoPalautteita() {\n    let palautteita = false\n    if(this.state.yhteensä!=0){\n      palautteita = true\n    }\n    return palautteita\n  }\n\n  onkoNan(luku) {\n    let palautettava\n    if (isNaN(luku)) {\n      palautettava = 0\n    } else {\n      palautettava = luku\n    }\n    return palautettava\n  }\n\n  laskeKeskiarvo() {\n    let keskiarvo = (((this.state.hyvä + (-Math.abs(this.state.huono)))/this.state.yhteensä)*100)\n    return this.onkoNan(keskiarvo)\n  }\n\n  laskePositiiviset() {\n    let positiiviset = (((this.state.hyvä)/this.state.yhteensä)*100)\n    return this.onkoNan(positiiviset)\n  }\n\n  asetaArvoon = (arvo,arviointi) => () => this.setState({[arviointi]: arvo, yhteensä: this.state.yhteensä+1})\n\n  render() {\n    let arvo = 1\n    if(this.onkoPalautteita()){\n      return(\n        <div>\n          <div><h1>Anna palautetta</h1></div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.hyvä + 1, \"hyvä\")}\n            text=\"Hyvä\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.neutraali + 1, \"neutraali\")}\n            text=\"Neutraali\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.huono + 1, \"huono\")}\n            text=\"Huono\"\n          />\n        \n          <div><h1>Statistiikka</h1></div>\n            <Statistics hyviä={this.state.hyvä} neutraaleja={this.state.neutraali} huonoja={this.state.huono} positiiviset = {this.laskePositiiviset()}/>\n            <Statistic keskiarvo={this.laskeKeskiarvo()}/>\n          </div>\n      ) \n    }else{\n      return (\n        <div>\n          <div><h1>Anna palautetta</h1></div>\n          <Button\n            handleClick={this.asetaArvoon(this.state.hyvä + 1, \"hyvä\")}\n            text=\"Hyvä\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.neutraali + 1, \"neutraali\")}\n            text=\"Neutraali\"\n          />\n          <Button\n            handleClick={this.asetaArvoon(this.state.huono + 1, \"huono\")}\n            text=\"Huono\"\n          />\n        \n          <div><h1>Statistiikka</h1></div>\n            <p>ei yhtään palautetta annettu</p>\n          </div>\n      )\n    } //else\n  }\n}\n\n\nconst Button = ({ handleClick, text}) => (\n  <button onClick={handleClick}>\n  {console.log(handleClick)}\n    {text}\n  </button>\n)\n\nconst Statistic = ({ keskiarvo }) => {\n  return (\n    <div>\n      <table>\n        <tr>\n          <td>Keskiarvo {keskiarvo}</td>\n        </tr>\n      </table>\n    </div>\n  )\n}\n\nconst Statistics = ({ hyviä, neutraaleja, huonoja, positiiviset }) => {\n  return (\n    <div>\n      <table>\n        <tr>\n          <td>Hyviä {hyviä}</td>\n        </tr>\n        <tr>\n          <td>Neutraaleja {neutraaleja}</td>\n        </tr>\n        <tr>\n          <td>Huonoja {huonoja}</td>\n        </tr>\n        <tr>\n          <td>Positiivisia {positiiviset}%</td>\n        </tr>\n      </table>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/   \n\n/*       1.12 ANEKDOOTIT OSA 1 & 1.13 ANEKDOOTIT OSA 2\n\n   */\n\n/*\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n       selected: 0,\n       suurinPisteIndex: 0,\n       suurimmatPisteet: 0,\n       pisteet3: 0,\n       pisteet4: 0,\n       pisteet5: 0,\n       satunnaisluku: 0,\n       random: []\n      }\n  }\n\n  arvoSatunnaisluku = () => () => this.setState({satunnaisluku: Math.floor((Math.random() * 6) + 0)})\n\n  addVote = () => () => { \n    //const kopio = [...anecdotes]\n    console.log(\"addVote anecdotes :\", anecdotes)\n    anecdotes[this.state.satunnaisluku].pisteet += 1\n    this.setState({selected: 1})\n    //console.log(\"addVote kopio :\", kopio)\n  }\n\n  winnerVote() {\n    let index = 0\n    let suurinPisteIndex = 0\n    let suurinPiste = 0\n    console.log(\"anekdoottien pituus\", anecdotes.length-1)\n\n    while(index < anecdotes.length-1){\n      console.log(\"anekdoottien pituus wilessä\", anecdotes.length)\n      console.log(\"suurimmatPisteet\", this.state.suurimmatPisteet)\n      console.log(\"anecdotes[index].pisteet\", anecdotes[index].pisteet)\n      console.log(\"this.state.suurimmatPisteet\", this.state.suurimmatPisteet)\n\n\n    if(anecdotes[index].pisteet>this.state.suurimmatPisteet){\n        console.log(\"anecdotes.pisteet\", anecdotes[index].pisteet)\n        this.setState({suurimmatPisteet: anecdotes[index].pisteet})\n        this.setState({suurinPisteIndex: index})\n        console.log(\"suurimmatPisteet\", this.state.suurimmatPisteet)\n        suurinPisteIndex = index\n   }   \n   console.log(\"suurimmatPisteet IFFIN JÄLKEEN\", this.state.suurimmatPisteet)\n   console.log(\"anecdotes[index].pisteet IFFIN JÄLKEEN\", anecdotes[index].pisteet)\n   console.log(\"this.state.suurimmatPisteet IFFIN JÄLKEEN\", this.state.suurimmatPisteet)\n   \n      index++\n      console.log(\"indexi whilessä\", index)\n    }\n    return suurinPisteIndex\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Anekdootti satunnaisluku={this.state.satunnaisluku}/>\n        </div>\n        <span>\n          <VoteButton\n            handleClick={this.addVote()}\n            text=\"vote\" \n          />\n        </span>\n        <span>\n          <Button\n            handleClick={this.arvoSatunnaisluku()}\n            text=\"next anecdote\"\n          />\n        </span>\n        <div>\n          <WinnerVote winnerVote={this.winnerVote()}/>\n\t\t\t  </div>\n      </div>\n    )\n  }\n}\n\n\n\nconst anecdotes = [\n  { id: 1, pisteet: 0, content: 'If it hurts, do it more often'},\n  { id: 2, pisteet: 0, content: 'Adding manpower to a late software project makes it later!'},\n  { id: 3, pisteet: 0, content: 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.'},\n  { id: 4, pisteet: 0, content: 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.'},\n  { id: 5, pisteet: 0, content: 'Premature optimization is the root of all evil.'},\n  { id: 6, pisteet: 0, content: 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'}\n]\n\nconst WinnerVote = ({winnerVote}) => {\n  console.log(\"winnerVote\", winnerVote)\n  console.log()\n  return (\n    <div>\n      <h2>anecdote with most votes:</h2>\n      <p>{anecdotes[winnerVote].content}</p>\n      <p>Has {anecdotes[winnerVote].pisteet} votes</p>\n    </div>\n  )\n}\n\nconst Anekdootti = ({ satunnaisluku }) => {\n  return (\n    <div>\n      <p>{anecdotes[satunnaisluku].content}</p>\n      <p>Has {anecdotes[satunnaisluku].pisteet} votes</p>\n    </div>\n  )\n}\n\nconst Button = ({ handleClick, text}) => (\n  <button onClick={handleClick}>\n  {console.log(handleClick)}\n    {text}\n  </button>\n)\n\nconst VoteButton = ({ handleClick, text}) => (\n  <button onClick={handleClick}>\n  {console.log(handleClick)}\n    {text}\n  </button>\n)\n\nReactDOM.render(\n  <App anecdotes={anecdotes} />,\n  document.getElementById('root')\n)\n\n*/\n\n\n   /* let tapaus\n    switch(this.state.selected) {\n\n      case 0:\n          //this.setState({pisteet1: this.state.pisteet1+1})\n          tapaus = \"pisteet1\"\n          break;\n      case 1:\n          //this.setState({pisteet2: this.state.pisteet2+1})\n          tapaus = \"pisteet2\"\n          break;\n      case 2:\n          //this.setState({pisteet3: this.state.pisteet3+1})\n          tapaus = \"pisteet3\"\n          break;\n      case 3:\n          //this.setState({pisteet4: this.state.pisteet4+1})\n          tapaus = \"pisteet4\"\n          break;\n      case 4:\n          //this.setState({pisteet5: this.state.pisteet5+1})\n          tapaus = \"pisteet5\"\n          break;\n  }\n    this.setState({[tapaus]: this.state.selected})\n*/\n\n\n\n/*_renderObject(){\n  let i = this.state.satunnaisluku\n  console.log(\"LUETTU SATUNNAISLUKU:\", typeof(i))\n  console.log(\"SATUNNAISLUKU:\", this.state.satunnaisluku)\n\n  console.log(\"this.props[i]\", this.props.anecdotes[2].pisteet)\n  for(let i = 0; i < this.props.length; i++) {\n    if(this.props[i] === this.state.satunnaisluku){\n    console.log(\"FOR IF SISÄLLÄ\")\n    console.log(\"FOR IF SISÄLLÄ anecdotes[i].name :\", anecdotes[i].name)\n\n    }\n\n    FILTTERI\n\n    var ages = [32, 33, 16, 40];\n\n    function checkAdult(age) {\n      return age >= 18;\n    }\n\n    function myFunction() {\n      document.getElementById(\"demo\").innerHTML = ages.filter(checkAdult);\n    }\n\n    MAP\n\n    let names = anecdotes.map(function(anecdote) {\n      return anecdote.name\n    }\n\n     // SHORT let names = anecdotes.map(function(anecdote) => anecdote.name)\n     // SHORTER let names = anecdotes.map(function(x) => x.name)\n     // REJECT\n     // REDUCE  let orders = [\n     //  { amount: 250 },\n     //  { amount: 400 },\n     //  { amount: 100 },\n     //  { amount: 325 }\n     //  ]\n     //  \n     //  let totalAmoun = orders.reduce(function(sum, order) {\n     //  return sum + order.amount\n     //  } 0)\n    \n    */\n    \n  \n\n/*\n  for (let key in anecdotes) {\n    console.log(\"KULLI\",anecdotes[2].name);\n  }\n\n  return Object.entries(anecdotes).map(([key, value], i) => {\n\n    console.log(Object.entries(anecdotes))\n    return (\n      <div key={key}>\n        pisteet is: {value.pisteet} ;\n        name is: {value.name}\n      </div>\n    )\n  })\n  */\n\n\n  \n const list = [\n  { id: 1, pisteet: 0, content: 'If it hurts, do it more often'},\n  { id: 2, pisteet: 0, content: 'Adding manpower to a late software project makes it later!'},\n  { id: 3, pisteet: 0, content: 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.'},\n  { id: 4, pisteet: 0, content: 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.'},\n  { id: 5, pisteet: 0, content: 'Premature optimization is the root of all evil.'},\n  { id: 6, pisteet: 0, content: 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'}\n]\n\nclass App extends React.Component {\n  state = {\n    members: [],\n    enitenPisteitä: 0\n  };\n  \n  componentDidMount() {\n    this.setState({ members: list });\n  }\n\n  handleEvent = (id, pisteet) => {\n    const updatePisteet = this.state.members.map(member => {\n      if (member.id === id) {\n        return Object.assign({}, member, {\n          pisteet: member.pisteet + 1\n        });\n      } else {\n        return member;\n      }\n    });\n\n\n\n\n    \n  \n    this.setState({\n      members: updatePisteet,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.members.map(list_map =><Anekdootti key={list_map.id} id={list_map.id} pisteet={list_map.pisteet} anekdootti={list_map.content} onVote={this.handleEvent}/>)}\n      </div>\n    )\n}\n}\n\nclass Anekdootti extends React.Component {\n\n  handleClick = (e) =>this.props.onVote(this.props.id, this.props.pisteet);\n//  handleClick = (e) => console.log('button clicked', e.target);\n\n  \n  render() {\n    return (\n    <div className=\"App\">\n    <span>\n      {this.props.anekdootti}\n    </span> \n    <button onClick={(e) => this.handleClick(e)}>+</button>\n    <div>Pisteet: {this.props.pisteet}</div>\n    </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n\n"]},"metadata":{},"sourceType":"module"}