{"ast":null,"code":"import _classCallCheck from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/perttira/Dropbox/Sites/fullstack/osa1/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/perttira/Dropbox/Sites/fullstack/osa1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n/*\n\nconst App = (props) => {\n  const {counter} = props\n  return (\n    <div>{counter.value}</div>\n  )\n}\n\nconst counter = {\n  value: 1\n}\n\nconst renderoi = () => {\n  ReactDOM.render(\n    <App counter={counter} />,\n    document.getElementById('root')\n  )\n}\n\nsetInterval(() => {\n  renderoi()\n  counter.value += 1;\n}, 1000)\n\n*/\n\n/*\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n\n//  React-komponenttien tilaa, eli muuttujaa this.state ei saa päivittää suoraan,\n//  tilan päivitys on tehtävä aina funktion setState avulla.\n//  Metodin kutsuminen päivittää tilan ja aiheuttaa komponentin uuden \n//  renderöinnin (ellei sitä ole estetty myöhemmin esiteltävällä tavalla). \n//  Uudelleenrenderöinnin yhteydessä myös kaikki komponentin sisältämät \n//  alikomponentit renderöidään.\n\n    setInterval(() => {\n      this.setState({ counter: this.state.counter + 1 })\n    }, 1000)\n  }\n  render() {\n    console.log('renderöidään', this.state.counter)\n    return (\n      <div>{this.state.counter}</div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/* TAPAHTUMANKÄSITTELIJÄ \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div>\n        <button onClick={() => this.setState({ counter: this.state.counter + 1 })}>\n          plus\n        </button>\n        <button onClick={() => this.setState({ counter: 0 })}>\n          zero\n        </button>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*   METODIEN KÄYTTÖ JA THIS    */\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      counter: 1\n    };\n    _this.kasvataYhdella = _this.kasvataYhdella.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.nollaa = _this.nollaa.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"nollaa\",\n    value: function nollaa() {\n      this.setState({\n        counter: 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.counter), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.kasvataYhdella,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"plus\"), React.createElement(\"button\", {\n        onClick: this.nollaa,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"zero\")));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/perttira/Dropbox/Sites/fullstack/osa1/src/index.js"],"names":["React","ReactDOM","App","state","counter","kasvataYhdella","bind","nollaa","setState","Component","render","document","getElementById"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;;IAEMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,uDAAd;AANY;AAOb;;;;6BAEQ;AACP,WAAKE,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKD,KAAL,CAAWC,OAAjB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,OAAO,EAAE,KAAKC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAIA;AAAQ,QAAA,OAAO,EAAE,KAAKE,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,CAFF,CADF;AAaD;;;;EA5BeP,KAAK,CAACS,S;;AA+BxBR,QAAQ,CAACS,MAAT,CACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/*\n\nconst App = (props) => {\n  const {counter} = props\n  return (\n    <div>{counter.value}</div>\n  )\n}\n\nconst counter = {\n  value: 1\n}\n\nconst renderoi = () => {\n  ReactDOM.render(\n    <App counter={counter} />,\n    document.getElementById('root')\n  )\n}\n\nsetInterval(() => {\n  renderoi()\n  counter.value += 1;\n}, 1000)\n\n*/\n\n\n/*\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n\n//  React-komponenttien tilaa, eli muuttujaa this.state ei saa päivittää suoraan,\n//  tilan päivitys on tehtävä aina funktion setState avulla.\n//  Metodin kutsuminen päivittää tilan ja aiheuttaa komponentin uuden \n//  renderöinnin (ellei sitä ole estetty myöhemmin esiteltävällä tavalla). \n//  Uudelleenrenderöinnin yhteydessä myös kaikki komponentin sisältämät \n//  alikomponentit renderöidään.\n\n    setInterval(() => {\n      this.setState({ counter: this.state.counter + 1 })\n    }, 1000)\n  }\n  render() {\n    console.log('renderöidään', this.state.counter)\n    return (\n      <div>{this.state.counter}</div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/* TAPAHTUMANKÄSITTELIJÄ \n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div>\n        <button onClick={() => this.setState({ counter: this.state.counter + 1 })}>\n          plus\n        </button>\n        <button onClick={() => this.setState({ counter: 0 })}>\n          zero\n        </button>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n*/\n\n/*   METODIEN KÄYTTÖ JA THIS    */\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      counter: 1\n    }\n    this.kasvataYhdella = this.kasvataYhdella.bind(this)\n    this.nollaa = this.nollaa.bind(this)\n  }\n\n  nollaa() {\n    this.setState({ counter: 0 })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div>\n        <div>\n        <button onClick={this.kasvataYhdella}>\n          plus\n        </button>\n        <button onClick={this.nollaa}>\n          zero\n        </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}